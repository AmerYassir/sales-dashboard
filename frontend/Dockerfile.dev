# Dockerfile for development environment
# Use the official Node.js image as a base
FROM node:22-alpine

# Set the working directory inside the container
# This is where your application code will live
# and where commands will be run
WORKDIR /app

# Copy package.json and package-lock.json to the working directory
# This is necessary for installing dependencies
COPY package*.json .

# Install the dependencies defined in package.json
RUN npm install

# Copy the rest of your application code to the working directory
# This includes your source code, configuration files, etc.
# It's important to do this after installing dependencies,
# to take advantage of Docker's caching mechanism
# If you change your code, only the code layer will be rebuilt
# If you change your dependencies, only the dependencies layer will be rebuilt
# This speeds up the build process, and makes it more efficient
COPY . .

# Expose the port that your application will run on
# This is the port that the development server will listen on
EXPOSE 5173

# Set the command to run your application
# This command will start the development server
CMD ["npm", "run", "dev"]